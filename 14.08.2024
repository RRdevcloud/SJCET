#include <stdio.h>

int stack[100];  // Define stack with a maximum possible size
int top = -1;    // Initialize stack top
int maxSize;     // Variable to store the size of the stack defined by the user

// Function to push an element into the stack
void push() {
    int item;
    if (top == (maxSize - 1)) {
        printf("Stack Overflow\n");
        return;
    }
    printf("Enter the number to be pushed: ");
    scanf("%d", &item);
    top++;
    stack[top] = item;
    printf("%d pushed to stack\n", item);
}

// Function to pop an element from the stack
int pop() {
    if (top == -1) {
        printf("Stack Underflow\n");
        return -1;
    }
    int item = stack[top];
    top--;
    return item;
}

// Function to display the elements of the stack
void display() {
    if (top == -1) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements are:\n");
    for (int i = top; i >= 0; i--) {
        printf("%d\n", stack[i]);
    }
}

// Function to confirm user action
int confirm_action() {
    char response;
    printf("Are you sure you want to proceed? (y/n): ");
    scanf(" %c", &response);  // Note the space before %c to capture any leading newline
    return response == 'y' || response == 'Y';  // Return 1 if 'y' or 'Y', otherwise 0
}

// Main function that follows the algorithm steps
int main() {
    int choice;
    int numInputs, i;

    // Ask the user for the stack size
    printf("Enter the size of the stack: ");
    scanf("%d", &maxSize);

    // Ask the user how many numbers they want to push initially
    printf("How many numbers do you want to push initially? ");
    scanf("%d", &numInputs);

    // Push the specified number of elements into the stack
    for (i = 0; i < numInputs; i++) {
        push();
    }

    // Display the current stack
    display();

    while (1) {
        // Display menu and take user input for operation choice
        printf("\nChoose an option:\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        // Confirm if the user wants to proceed with the chosen option
        if (confirm_action()) {
            // Execute the selected operation using a switch-case structure
            switch (choice) {
                case 1:  // Push operation
                    push();  // Call push function
                    break;
                case 2:  // Pop operation
                    int item = pop();  // Call pop function
                    if (item != -1) {
                        printf("Popped item: %d\n", item);
                    }
                    break;
                case 3:  // Display operation
                    display();  // Call display function
                    break;
                case 4:  // Exit program
                    printf("Exiting program.\n");
                    return 0;
                default:
                    printf("Invalid choice. Please enter a valid option.\n");
            }
        } else {
            printf("Operation cancelled.\n");
        }
    }

    return 0;
}
